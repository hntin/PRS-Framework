/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uit.tkorg.pr.gui;

import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import uit.tkorg.pr.constant.Options;
import uit.tkorg.pr.controller.CentralGuiHanderRequest;
import uit.tkorg.pr.model.Author;
import uit.tkorg.utility.general.NumericUtility;

/**
 *
 * @author Vinh
 */
public class PRSGui extends javax.swing.JFrame {

    /**
     * Creates new form PRSGui
     */
    private CentralGuiHanderRequest controller;
    private String[] response;
    private List previousEvaluation = new ArrayList<String>();// save result EVALUATE
    private List previousRecommdendation = new ArrayList<HashMap<String, Author>>();
    private int methodEvaluation;// kiem tra phuong thuc Evaluation nao dc chon

    public PRSGui() {
        initComponents();
        controller = new CentralGuiHanderRequest();
        jButtonFileAuthor.setEnabled(false);
        jButtonFileAuthorCitePaper.setEnabled(false);
        jButtonFileAuthorPaper.setEnabled(false);
        jButtonFilePaper.setEnabled(false);
        jButtonFilePaperPaper.setEnabled(false);
        jButtonFileGroundTruth.setEnabled(false);
        controller.combiningAuthor = 0;
        controller.combiningPaper = 0;
        controller.weightingAuthor = 0;
        controller.weightingPaper = 0;

        jTextAreaAuthor.setEditable(false);
        jTextAreaAuthorCitePaper.setEditable(false);
        jTextAreaAuthorPaper.setEditable(false);
        jTextAreaGroundTruth.setEditable(false);
        jTextAreaPaper.setEditable(false);
        jTextAreaPaperPaper.setEditable(false);
        redirectSystemStreams();
    }
        private void updateTextArea(final String text) {
            SwingUtilities.invokeLater(new Runnable() {
              public void run() {
                jTextAreaConsole.append(text);
              }
            });
          }

          private void redirectSystemStreams() {
            OutputStream out = new OutputStream() {
              @Override
              public void write(int b) throws IOException {
                updateTextArea(String.valueOf((char) b));
              }

              @Override
              public void write(byte[] b, int off, int len) throws IOException {
                updateTextArea(new String(b, off, len));
              }

              @Override
              public void write(byte[] b) throws IOException {
                write(b, 0, b.length);
              }
            };

            System.setOut(new PrintStream(out, true));
            System.setErr(new PrintStream(out, true));
          }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jButton23 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton17 = new javax.swing.JButton();
        jPopupMenuImportData = new javax.swing.JPopupMenu();
        jMenuItemExampleData = new javax.swing.JMenuItem();
        jMenuItemFromDataScource = new javax.swing.JMenuItem();
        jPopupMenuDataPreparation = new javax.swing.JPopupMenu();
        jMenuItemDcontentbased = new javax.swing.JMenuItem();
        jMenuItemDcollaborativeFiltering = new javax.swing.JMenuItem();
        jPopupMenuRecommendation = new javax.swing.JPopupMenu();
        jMenuItemRcontentBased = new javax.swing.JMenuItem();
        jMenuItemRCollaborativeFiltering = new javax.swing.JMenuItem();
        jPopupMenuEvaluation = new javax.swing.JPopupMenu();
        jMenuItemPrecision = new javax.swing.JMenuItem();
        jMenuItemRecall = new javax.swing.JMenuItem();
        jMenuItemF1 = new javax.swing.JMenuItem();
        jMenuItemMAP = new javax.swing.JMenuItem();
        jMenuItemNDCG = new javax.swing.JMenuItem();
        jMenuItemMRR = new javax.swing.JMenuItem();
        jMenuItemAllEvalution = new javax.swing.JMenuItem();
        jTabbedPaneStep = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAuthor = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextAreaAuthorPaper = new javax.swing.JTextArea();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextAreaAuthorCitePaper = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextAreaPaper = new javax.swing.JTextArea();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextAreaPaperPaper = new javax.swing.JTextArea();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextAreaGroundTruth = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jRadioButtonDatasetExample = new javax.swing.JRadioButton();
        jRadioButtonDatasetSource = new javax.swing.JRadioButton();
        jPanel31 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButtonFileAuthor = new javax.swing.JButton();
        jButtonFilePaper = new javax.swing.JButton();
        jButtonFileAuthorPaper = new javax.swing.JButton();
        jButtonFilePaperPaper = new javax.swing.JButton();
        jButtonFileAuthorCitePaper = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jButtonFileGroundTruth = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTextFieldDataPreAlgorithm = new javax.swing.JTextField();
        jComboBoxMethodPreData = new javax.swing.JComboBox();
        jTabbedPaneDataPreparation = new javax.swing.JTabbedPane();
        jPanel26 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxCMUser = new javax.swing.JComboBox();
        jComboBoxWeightingUser = new javax.swing.JComboBox();
        jPanel23 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxCMPaper = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxWeightingPaper = new javax.swing.JComboBox();
        jPanel30 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jTextFieldShowMethodRec = new javax.swing.JTextField();
        jTextFieldTopNRecommend = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxMethodRecommend = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListRecAlgorithm = new javax.swing.JList();
        jPanel35 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTableRecommendationList = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldIdAuthor = new javax.swing.JTextField();
        jButtonFindUser = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jTextFieldEvaluationMethod = new javax.swing.JTextField();
        jTextFieldtopRank = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxMethodEvaluation = new javax.swing.JComboBox();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListEvaluation = new javax.swing.JList();
        jPanel36 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaReviewEvaluation = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextAreaConsole = new javax.swing.JTextArea();
        jPanel38 = new javax.swing.JPanel();
        jPanel39 = new javax.swing.JPanel();
        jButtonStartImportData = new javax.swing.JButton();
        jButtonStopImportData = new javax.swing.JButton();
        jButtonChooseDataset = new javax.swing.JButton();
        jPanel40 = new javax.swing.JPanel();
        jButtonMethodDataPreparation = new javax.swing.JButton();
        jButtonContructUserProfile = new javax.swing.JButton();
        jButtonSaveModel = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButtonRecommend = new javax.swing.JButton();
        jButtonStopRecommendation = new javax.swing.JButton();
        jButtonMethodRecommendation = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jButtonMethodEvaluation = new javax.swing.JButton();
        jButtonEvaluation = new javax.swing.JButton();
        jButtonStopEvaluation = new javax.swing.JButton();
        jButtonErrorAnalysis = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jButtonTFIDF = new javax.swing.JButton();
        jButtonDrawChart = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveModelMenuItem = new javax.swing.JMenuItem();
        loadExistentModelMenuItem = new javax.swing.JMenuItem();
        resetMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        buildTFIDFFilesMenuItem = new javax.swing.JMenuItem();
        visualizeMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton23.setText("jButton23");

        jButton17.setText("jButton17");

        jPopupMenuImportData.setBackground(new java.awt.Color(255, 255, 255));
        jPopupMenuImportData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jMenuItemExampleData.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemExampleData.setText("From Dataset Example");
        jMenuItemExampleData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExampleDataActionPerformed(evt);
            }
        });
        jPopupMenuImportData.add(jMenuItemExampleData);

        jMenuItemFromDataScource.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemFromDataScource.setText("From Dataset Scource");
        jMenuItemFromDataScource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFromDataScourceActionPerformed(evt);
            }
        });
        jPopupMenuImportData.add(jMenuItemFromDataScource);

        jPopupMenuDataPreparation.setBackground(new java.awt.Color(255, 255, 255));
        jPopupMenuDataPreparation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jMenuItemDcontentbased.setText("Content Based");
        jMenuItemDcontentbased.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDcontentbasedActionPerformed(evt);
            }
        });
        jPopupMenuDataPreparation.add(jMenuItemDcontentbased);

        jMenuItemDcollaborativeFiltering.setText("Collaborative Filtering");
        jPopupMenuDataPreparation.add(jMenuItemDcollaborativeFiltering);

        jPopupMenuRecommendation.setBackground(new java.awt.Color(255, 255, 255));
        jPopupMenuRecommendation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jMenuItemRcontentBased.setText("Content Based");
        jPopupMenuRecommendation.add(jMenuItemRcontentBased);

        jMenuItemRCollaborativeFiltering.setText("Collaborative Filtering");
        jPopupMenuRecommendation.add(jMenuItemRCollaborativeFiltering);

        jPopupMenuEvaluation.setBackground(new java.awt.Color(255, 255, 255));
        jPopupMenuEvaluation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jMenuItemPrecision.setText("Precision");
        jPopupMenuEvaluation.add(jMenuItemPrecision);

        jMenuItemRecall.setText("Recall");
        jPopupMenuEvaluation.add(jMenuItemRecall);

        jMenuItemF1.setText("F1");
        jPopupMenuEvaluation.add(jMenuItemF1);

        jMenuItemMAP.setText("MAP");
        jPopupMenuEvaluation.add(jMenuItemMAP);

        jMenuItemNDCG.setText("NDCG");
        jPopupMenuEvaluation.add(jMenuItemNDCG);

        jMenuItemMRR.setText("MRR");
        jPopupMenuEvaluation.add(jMenuItemMRR);

        jMenuItemAllEvalution.setText("All");
        jPopupMenuEvaluation.add(jMenuItemAllEvalution);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Paper Recommendation System");
        setResizable(false);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Description"));

        jTextAreaAuthor.setColumns(20);
        jTextAreaAuthor.setRows(5);
        jTextAreaAuthor.setText("File Authors.csv containt information about authors.\nIt have IdAuthor|||NameAuthor format.\nExample:\n1|||John F. Young\n2|||Sule Yildirim\n3|||Elizabeth K. Reilly\n4|||Yann Le Gorrec");
        jScrollPane1.setViewportView(jTextAreaAuthor);

        jTabbedPane4.addTab("File Authors", jScrollPane1);

        jTextAreaAuthorPaper.setColumns(20);
        jTextAreaAuthorPaper.setRows(5);
        jTextAreaAuthorPaper.setText("File AuthorPaper.csv containt information about papers  of authors.\nIt have IdAuthor|||IdPaper format.\nExample:\n1|||11\n1|||12\n1|||13\n1|||14\n2|||21\n2|||22\n3|||31\n4|||41\n4|||42");
        jScrollPane10.setViewportView(jTextAreaAuthorPaper);

        jTabbedPane4.addTab("File Author_ Paper", jScrollPane10);

        jTextAreaAuthorCitePaper.setColumns(20);
        jTextAreaAuthorCitePaper.setRows(5);
        jTextAreaAuthorCitePaper.setText("File AuthorCitePape.csv give information about papers which author cited.\nFile have IdAuthor|||IdPaper|||YearCited format.\nExample:\n1|||11\n1|||12\n1|||13\n1|||14\n2|||21\n2|||22\n3|||31\n4|||41\n4|||42");
        jScrollPane11.setViewportView(jTextAreaAuthorCitePaper);

        jTabbedPane4.addTab("File Author_Cited_ paper", jScrollPane11);

        jTextAreaPaper.setColumns(20);
        jTextAreaPaper.setRows(5);
        jTextAreaPaper.setText("File Paper.csv containt information about papers (idpaper, title, content of paper, year publishion).\nFile have IdPaper|||TitlePaper|||ContentPaper|||YearPaper format.\nVí dụ:\n11|||Knowledge Discovery from Sparse Pharmacokinetic Data|||In this research effort, we show that the following hypothesis is true: The independently verified sparse information secured from the scientific literature regarding the effects of methyl mercury on mice enables us to predict the effects of the methyl mercury on humans. The Rough Sets methodology is used in this endeavor|||2000\n111|||A fusion of rough sets, modified rough sets, and genetic algorithms for hybrid diagnostic systems|||A hybrid classification system is a system composed of several intelligent techniques such that the inherent limitations of one individual technique be compensated for by the strengths of another technique. In this paper, we investigate the outline of a hybrid diagnostic system for Attention Deficit Disorder (ADD) in children. This system uses Rough Sets (RS) and Modified Rough Sets (MRS) to induce rules from examples and then uses our modified genetic algorithms to globalize the rules. Also, the classification capability of this hybrid system was compared with the behavior of (a) another hybrid classification system using RS, MRS, and the “dropping condition” approach, (b) the Interactive Dichotomizer 3 (ID3) approach, and (c) a basic genetic algorithm. The results revealed that the global rules generated by the hybrid system are more effective in classification of the testing dataset than the rules generated by the above approaches.|||1997\n112|||Rough Classification|||This article contains a new concept of approximate analysis of data, based on the idea of a “rough” set. The notion of approximate (rough) description of a set is introduced and investigated. The application to medical data analysis is shown as an example.|||1984\n113|||Developmental toxicity risk assessment: a rough sets approach|||A rough sets approach was applied to a data set consisting of animal study results and other compound characteristics to generate local and global (certain/possible) sets of rules for prediction of developmental toxicity in human subjects. A modified version of the rough sets approach is proposed to allow the construction of an approximate set of rules to use for prediction in a manner similar to that of discriminant analysis. The modified rough sets approach is superior in predictability to the original form of rough-sets methodology. In comparison to discriminant analysis, modified rough sets (approximate rules) appear to be better in overall classification, sensitivity, positive and negative predictive values. The findings were supported by applying the modified rough sets and discriminant analysis on a test data set generated from the original data set by using a resampling plan.|||1993\n114|||A Theory and Methodology of Inductive Learning|||A theory of inductive learning is presented that characterizes it as a heuristic search through a space of symbolic descriptions, generated by an application of certain inference rules to the initial observational statements (the teacher-provided examples of some concepts, or facts about a class of objects or a phenomenon). The inference rules include generalization rules, which perform generalizing transformations on descriptions, and conventional truth-preserving deductive rules (specialization and reformulation rules). The application of the inference rules to descriptions is constrained by problem background knowledge, and guided by criteria evaluating the ‘quality’ of generated inductive assertions.Based on this theory, a general methodology for learning structural descriptions from examples, called star, is described and illustrated by a problem from the area of conceptual data analysis|||1983\n115|||Rough classification|||This article contains a new concept of approximate analysis of data, based on the idea of a “rough” set. The notion of approximate (rough) description of a set is introduced and investigated. The application to medical data analysis is shown as an example.|||1999\n116|||LERS-a system for learning from examples based on rough sets|||The paper presents the system LERS for rule induction. The system handles inconsistencies in the input data due to its usage of rough set theory principle. Rough set theory is especially well suited to deal with inconsistencies. In this approach, inconsistencies are not corrected. Instead, system LERS computes lower and upper approximations of each concept. Then it induces certain rules and possible rules. The user has the choice to use the machine learning approach or the knowledge acquisition approach. In the first case, the system induces a single minimal discriminant description for each concept. In the second case, the system induces all rules, each in the minimal form, that can be induced from the input data. In both cases, the user has a choice between the local or global approach.|||1992\n12|||The Investigation of Mercury Presence in Human Blood: An Extrapolation from Animal Data Using Neural Networks|||In this research effort a neural network approach was used as a method of extrapolating the presence of mercury in human blood from animal data. We also investigated the effect of different data representations (As-is, Category, Simple binary, Thermometer, and Flag) on the model performance. In addition, we used the Rough Sets methodology to identify the redundant independent variables and then examined the proposed extrapolation model performance for a reduced set of independent variables. Moreover, a quality measure was introduced that revealed that the proposed extrapolation model performed extremely well for the Thermometer data representation.|||2002\n121|||Pattern development for vessel accidents: a comparison of statistical and neural computing techniques|||This paper describes a sample of over 900 vessel accidents that occurred on the lower Mississippi River. Two different techniques, one statistical and the other based on a neural network model, were used to build logical groups of accidents. The objective in building the groups was to maximize between-group variation and minimize within-group variation. The result was groups whose records were as homogenous as possible.A clustering algorithm (i.e., a non-inferential statistical technique) generated sets of three, four and five groups. A Kohenen neural network model (i.e., a self-organizing map) also generated sets of three, four and five groups. The two sets of parallel groups were radically different as to the relative number of records in each group. In other words, when the two sets of groups were constructed by the respective techniques, the membership of each comparable group within the two different sets was substantially different. Not only was the respective record count in each group substantially different, so were the descriptive statistics describing each comparable set of groups.These results have significant implications for marine policy makers. Important policy variables include safety factors such as weather, speed of current, time of operation, and location of accidents, but mandatory utilization of a voluntary vessel tracking service may be subject to debate.|||2001\n122|||An Introduction to Computing with Neural Nets|||Artificial neural net models have been studied for many years in the hope of achieving human-like performance in the fields of speech and image recognition. These models are composed of many nonlinear computational elements operating in parallel and arranged in patterns reminiscent of biological neural nets. Computational elements or nodes are connected via weights that are typically adapted during use to improve performance. There has been a recent resurgence in the field of artificial neural nets caused by new net topologies and algorithms, analog VLSI implementation techniques, and the belief that massive parallelism is essential for high performance speech and image recognition. This paper provides an introduction to the field of artificial neural nets by reviewing six important neural net models that can be used for pattern classification. These nets are highly parallel building blocks that illustrate neural net components and design principles and can be used to construct more complex systems. In addition to describing these nets, a major emphasis is placed on exploring how some existing classification and clustering algorithms can be performed using simple neuron-like components. Single-layer nets can implement algorithms required by Gaussian maximum-likelihood classifiers and optimum minimum-error classifiers for binary patterns corrupted by noise. More generally, the decision regions required by any classification algorithm can be generated in a straightforward manner by three-layer feed-forward nets|||1987");
        jScrollPane12.setViewportView(jTextAreaPaper);

        jTabbedPane4.addTab("File Papers", jScrollPane12);

        jTextAreaPaperPaper.setColumns(20);
        jTextAreaPaperPaper.setRows(5);
        jTextAreaPaperPaper.setText("File Paper_Cited_Paper.csv. These file give information about paper cited papers.\nFile have IdPaper|||IdPaperCited format.\nExample:\n11|||111\n11|||112\n11|||113\n11|||114\n11|||115\n11|||116\n12|||121\n12|||122\n12|||123\n13|||131");
        jScrollPane13.setViewportView(jTextAreaPaperPaper);

        jTabbedPane4.addTab("File Paper_Cited_Paper", jScrollPane13);

        jTextAreaGroundTruth.setColumns(20);
        jTextAreaGroundTruth.setRows(5);
        jTextAreaGroundTruth.setText("File GroundTruth.csv give information about Groundtruth of authors.\nFile have IdAuthor||IdPaper format.\nExample:\n1|||1\n1|||5\n1|||112\n1|||134\n1|||9\n2|||211\n2|||215\n2|||214\n2|||9\n2|||42");
        jScrollPane14.setViewportView(jTextAreaGroundTruth);

        jTabbedPane4.addTab("File GroundTruth", jScrollPane14);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose Dataset"));

        buttonGroup1.add(jRadioButtonDatasetExample);
        jRadioButtonDatasetExample.setText("From Dataset Example");
        jRadioButtonDatasetExample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDatasetExampleActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonDatasetSource);
        jRadioButtonDatasetSource.setText("From Dataset Source");
        jRadioButtonDatasetSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDatasetSourceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(0, 5, Short.MAX_VALUE)
                .addComponent(jRadioButtonDatasetExample)
                .addContainerGap())
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonDatasetSource)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonDatasetExample)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButtonDatasetSource)
                .addContainerGap())
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder("Import Data"));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Training Data"));

        jButtonFileAuthor.setText("File authors");
        jButtonFileAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileAuthorActionPerformed(evt);
            }
        });

        jButtonFilePaper.setText("File papers");
        jButtonFilePaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilePaperActionPerformed(evt);
            }
        });

        jButtonFileAuthorPaper.setText("File author- paper");
        jButtonFileAuthorPaper.setPreferredSize(new java.awt.Dimension(89, 23));
        jButtonFileAuthorPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileAuthorPaperActionPerformed(evt);
            }
        });

        jButtonFilePaperPaper.setText("File paper-cite- paper");
        jButtonFilePaperPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilePaperPaperActionPerformed(evt);
            }
        });

        jButtonFileAuthorCitePaper.setText("File author- cite- paper");
        jButtonFileAuthorCitePaper.setPreferredSize(new java.awt.Dimension(89, 23));
        jButtonFileAuthorCitePaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileAuthorCitePaperActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jButtonFileAuthor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileAuthorPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFileAuthorCitePaper, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFilePaper, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFilePaperPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFileAuthor)
                    .addComponent(jButtonFileAuthorPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFileAuthorCitePaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFilePaper)
                    .addComponent(jButtonFilePaperPaper))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder("Testing Data"));

        jButtonFileGroundTruth.setText("File GroundTruth");
        jButtonFileGroundTruth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileGroundTruthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonFileGroundTruth, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonFileGroundTruth)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneStep.addTab("Import Data", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose Algorithm"));

        jTextFieldDataPreAlgorithm.setEditable(false);
        jTextFieldDataPreAlgorithm.setText("Content - based");
        jTextFieldDataPreAlgorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDataPreAlgorithmActionPerformed(evt);
            }
        });

        jComboBoxMethodPreData.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Content - based", "Collaborative filtering" }));
        jComboBoxMethodPreData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMethodPreDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jComboBoxMethodPreData, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldDataPreAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDataPreAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMethodPreData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel26.setEnabled(false);

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Author Profile Construction"));

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Option"));

        jLabel12.setText("Combination Method");

        jLabel13.setText("Weighting Combination");

        jComboBoxCMUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Feature Vector Of Paper", "Feature Vector Of Paper+ Citation Papers", "Feature Vector Of Paper+ Reference Papers", "Feature Vector Of Paper+ Citation Papers + Reference Papers" }));
        jComboBoxCMUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCMUserActionPerformed(evt);
            }
        });

        jComboBoxWeightingUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Linear combination(LC)", "Cosine similarity(SIM)", "Reciprocal of the difference between published years(RPY)", "Forgetting factor(FF)" }));
        jComboBoxWeightingUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxWeightingUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxCMUser, 0, 347, Short.MAX_VALUE)
                    .addComponent(jComboBoxWeightingUser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jComboBoxCMUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboBoxWeightingUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Discription Option"));

        jLabel11.setText("Combination method");

        jLabel14.setText("Weighting Combination");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder("Feature Vector Construction for Paper"));

        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder("Option"));

        jLabel15.setText("Combination Method");

        jComboBoxCMPaper.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Feature Vector Of Paper", "Feature Vector Of Paper+ Citation Papers", "Feature Vector Of Paper+ Reference Papers", "Feature Vector Of Paper+ Citation Papers + Reference Papers" }));
        jComboBoxCMPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCMPaperActionPerformed(evt);
            }
        });

        jLabel16.setText("Weighting Combination");

        jComboBoxWeightingPaper.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Linear combination(LC)", "Cosine similarity(SIM)", "Reciprocal of the difference between published years(RPY)", "Forgetting factor(FF)" }));
        jComboBoxWeightingPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxWeightingPaperActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxCMPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxWeightingPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jComboBoxCMPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBoxWeightingPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder("Discription Option"));

        jLabel17.setText("Combination method");

        jLabel18.setText("Weighting Combination");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 217, Short.MAX_VALUE)
            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPaneDataPreparation.addTab("Content - based", jPanel26);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Current relation"));

        jLabel1.setText("Colums:");

        jLabel5.setText("Rows:");

        jLabel6.setText("Missing value:");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(195, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Option"));

        jButton30.setText("Input Matrix Construction");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("Import Existent Matrix");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton30, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton30)
                .addGap(31, 31, 31)
                .addComponent(jButton31)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPaneDataPreparation.addTab("Collaborative filtering", jPanel27);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPaneDataPreparation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPaneDataPreparation)
                .addGap(1, 1, 1))
        );

        jTabbedPaneStep.addTab("Data Preparation", jPanel2);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Recommendation"));

        jTextFieldShowMethodRec.setEditable(false);
        jTextFieldShowMethodRec.setText("Content - based");

        jTextFieldTopNRecommend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldTopNRecommendKeyReleased(evt);
            }
        });

        jLabel3.setText("Top N Recommend");

        jComboBoxMethodRecommend.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Content - based", "Collaborative filtering with KNN Pearson", "Collaborative filtering with KNN Cosine", "Collaborative filtering with SVD" }));
        jComboBoxMethodRecommend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMethodRecommendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jComboBoxMethodRecommend, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldShowMethodRec)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldTopNRecommend, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldShowMethodRec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMethodRecommend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTopNRecommend)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Algorithm Choosed"));

        jListRecAlgorithm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListRecAlgorithmMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jListRecAlgorithm);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder("Recommendation List"));

        jTableRecommendationList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Id author", "Recommendation List"
            }
        ));
        jScrollPane16.setViewportView(jTableRecommendationList);

        jLabel4.setText("Id Author");

        jTextFieldIdAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldIdAuthorKeyReleased(evt);
            }
        });

        jButtonFindUser.setText("Find");
        jButtonFindUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFindUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(14, 14, 14)
                .addComponent(jTextFieldIdAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFindUser, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldIdAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFindUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 2, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneStep.addTab("Recommendation", jPanel3);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Evaluation"));

        jTextFieldEvaluationMethod.setEditable(false);
        jTextFieldEvaluationMethod.setText("Precision");

        jLabel2.setText("at K:");

        jComboBoxMethodEvaluation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Precision", "Recall", "F Measure", "Mean Average Precison(MAP)", "Normalized Discouted Cumulative Gain(NDCG)", "Mean Reciprocal Rank(MRR)", "All Evaluation" }));
        jComboBoxMethodEvaluation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMethodEvaluationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jComboBoxMethodEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldEvaluationMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldtopRank, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxMethodEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEvaluationMethod)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldtopRank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("Evaluation Choosed"));

        jListEvaluation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListEvaluationMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListEvaluation);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
        );

        jPanel36.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Review Evaluation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0)));

        jTextAreaReviewEvaluation.setEditable(false);
        jTextAreaReviewEvaluation.setColumns(20);
        jTextAreaReviewEvaluation.setRows(5);
        jScrollPane4.setViewportView(jTextAreaReviewEvaluation);

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneStep.addTab("Evaluation", jPanel4);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Console"));

        jTextAreaConsole.setEditable(false);
        jTextAreaConsole.setColumns(20);
        jTextAreaConsole.setRows(5);
        jScrollPane8.setViewportView(jTextAreaConsole);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
        );

        jPanel38.setBorder(javax.swing.BorderFactory.createTitledBorder("Tool bar"));

        jPanel39.setBorder(javax.swing.BorderFactory.createTitledBorder("Step 1- Import Data"));

        jButtonStartImportData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Play-Pressed.png"))); // NOI18N
        jButtonStartImportData.setToolTipText("Start Import Dataset");
        jButtonStartImportData.setEnabled(false);
        jButtonStartImportData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartImportDataActionPerformed(evt);
            }
        });

        jButtonStopImportData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Stop-Pressed.png"))); // NOI18N
        jButtonStopImportData.setToolTipText("Stop Import Dataset");
        jButtonStopImportData.setEnabled(false);

        jButtonChooseDataset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Database-Active-icon.png"))); // NOI18N
        jButtonChooseDataset.setToolTipText("Choose Dataset");
        jButtonChooseDataset.setPreferredSize(new java.awt.Dimension(45, 41));
        jButtonChooseDataset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonChooseDatasetMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel39Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonChooseDataset, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonStartImportData, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonStopImportData, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonStartImportData)
            .addComponent(jButtonStopImportData)
            .addComponent(jButtonChooseDataset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel40.setBorder(javax.swing.BorderFactory.createTitledBorder("Step 2 - Data Preparation"));

        jButtonMethodDataPreparation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/option.png"))); // NOI18N
        jButtonMethodDataPreparation.setToolTipText("Choose Preparation");
        jButtonMethodDataPreparation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMethodDataPreparationMouseClicked(evt);
            }
        });

        jButtonContructUserProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/buildProfile.png"))); // NOI18N
        jButtonContructUserProfile.setToolTipText("Start Prepare Data for CB");
        jButtonContructUserProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContructUserProfileActionPerformed(evt);
            }
        });

        jButtonSaveModel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/computeMatrixCF.png"))); // NOI18N
        jButtonSaveModel.setToolTipText("Start Compute Matrix CF");

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jButtonMethodDataPreparation, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonContructUserProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSaveModel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonMethodDataPreparation)
            .addComponent(jButtonContructUserProfile)
            .addComponent(jButtonSaveModel)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Step 3 - Recommendation"));

        jButtonRecommend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Icon-Recommendation.png"))); // NOI18N
        jButtonRecommend.setToolTipText("Start Recommend");
        jButtonRecommend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecommendActionPerformed(evt);
            }
        });

        jButtonStopRecommendation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Stop-Pressed.png"))); // NOI18N
        jButtonStopRecommendation.setToolTipText("Stop Recommend");
        jButtonStopRecommendation.setEnabled(false);

        jButtonMethodRecommendation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/option.png"))); // NOI18N
        jButtonMethodRecommendation.setToolTipText("Choose Recommendation Algorithm");
        jButtonMethodRecommendation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMethodRecommendationMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jButtonMethodRecommendation, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRecommend, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonStopRecommendation, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonMethodRecommendation)
            .addComponent(jButtonRecommend)
            .addComponent(jButtonStopRecommendation)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Step 4 - Evaluation"));

        jButtonMethodEvaluation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/option.png"))); // NOI18N
        jButtonMethodEvaluation.setToolTipText("Choose Evaluation Measure");
        jButtonMethodEvaluation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMethodEvaluationMouseClicked(evt);
            }
        });

        jButtonEvaluation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/evaluate.png"))); // NOI18N
        jButtonEvaluation.setToolTipText("Start Evaluate");
        jButtonEvaluation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEvaluationActionPerformed(evt);
            }
        });

        jButtonStopEvaluation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Save.png"))); // NOI18N
        jButtonStopEvaluation.setToolTipText("Save Evaluation");

        jButtonErrorAnalysis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/analysis-icon.png"))); // NOI18N
        jButtonErrorAnalysis.setToolTipText("Analyze Error");
        jButtonErrorAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonErrorAnalysisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jButtonMethodEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonStopEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonErrorAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonMethodEvaluation)
            .addComponent(jButtonEvaluation)
            .addComponent(jButtonStopEvaluation)
            .addComponent(jButtonErrorAnalysis)
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Tools"));

        jButtonTFIDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Document-Write-icon.png"))); // NOI18N
        jButtonTFIDF.setToolTipText("Build TFIDF Files");
        jButtonTFIDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTFIDFActionPerformed(evt);
            }
        });

        jButtonDrawChart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/chart-bar.png"))); // NOI18N
        jButtonDrawChart.setToolTipText("Visualize");
        jButtonDrawChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDrawChartActionPerformed(evt);
            }
        });

        jButtonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Button-Refresh-icon.png"))); // NOI18N
        jButtonReset.setToolTipText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTFIDF, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDrawChart, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonTFIDF)
            .addComponent(jButtonDrawChart)
            .addComponent(jButtonReset)
        );

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel40, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        fileMenu.setText("File");

        saveModelMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Misc-Download-Database-icon.png"))); // NOI18N
        saveModelMenuItem.setText("Save Model");
        fileMenu.add(saveModelMenuItem);

        loadExistentModelMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Misc-Upload-Database-icon.png"))); // NOI18N
        loadExistentModelMenuItem.setText("Load Existent Model");
        fileMenu.add(loadExistentModelMenuItem);

        resetMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/Button-Refresh.png"))); // NOI18N
        resetMenuItem.setText("Reset");
        fileMenu.add(resetMenuItem);

        exitMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uit/tkorg/pr/gui/Icon/stopButton.png"))); // NOI18N
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        toolsMenu.setText("Tools");

        buildTFIDFFilesMenuItem.setText("Build TFIDF Files");
        buildTFIDFFilesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildTFIDFFilesMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(buildTFIDFFilesMenuItem);

        visualizeMenuItem.setText("Visualize");
        visualizeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizeMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(visualizeMenuItem);

        jMenuBar1.add(toolsMenu);

        jMenu1.setText("Help");

        jMenuItem1.setText("About program");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("How to use pramgram?");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Javadoc Reference");
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("SystemInfo");
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneStep, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPaneStep, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxWeightingUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxWeightingUserActionPerformed
        // TODO add your handling code here:
        if (jComboBoxWeightingUser.getSelectedIndex() == 0) {
            controller.weightingAuthor = 0;
        } else if (jComboBoxWeightingUser.getSelectedIndex() == 1) {
            controller.weightingAuthor = 1;
        } else if (jComboBoxWeightingUser.getSelectedIndex() == 2) {
            controller.weightingAuthor = 2;
        } else if (jComboBoxWeightingUser.getSelectedIndex() == 3) {
            String input = JOptionPane.showInputDialog("Please input gamma...");
            while (!NumericUtility.isNum(input)) {
                input = JOptionPane.showInputDialog("Please input gamma...");
            }
            if (input != null) {
                while (Double.valueOf(input) < 0 || Double.valueOf(input) > 1) {
                    input = JOptionPane.showInputDialog("Please input gamma...");
                    if (input == null) {
                        input = "-1";
                    }
                }
                controller.gama = Double.valueOf(input);
            }
        }
    }//GEN-LAST:event_jComboBoxWeightingUserActionPerformed

    private void jTextFieldDataPreAlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDataPreAlgorithmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDataPreAlgorithmActionPerformed

    private void jRadioButtonDatasetSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDatasetSourceActionPerformed
        // TODO add your handling code here:
        jButtonFileAuthor.setEnabled(true);
        jButtonFileAuthorCitePaper.setEnabled(true);
        jButtonFileAuthorPaper.setEnabled(true);
        jButtonFilePaper.setEnabled(true);
        jButtonFilePaperPaper.setEnabled(true);
        jButtonFileGroundTruth.setEnabled(true);
    }//GEN-LAST:event_jRadioButtonDatasetSourceActionPerformed

    private void jButtonFileAuthorCitePaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileAuthorCitePaperActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.showOpenDialog(this);
        controller.fileNameAuthorCitePaper = fc.getSelectedFile().getAbsolutePath();
        jTextAreaConsole.append(fc.getSelectedFile().getAbsolutePath() + "\n");
    }//GEN-LAST:event_jButtonFileAuthorCitePaperActionPerformed

    private void jRadioButtonDatasetExampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDatasetExampleActionPerformed
        jButtonFileAuthor.setEnabled(false);
        jButtonFileAuthorCitePaper.setEnabled(false);
        jButtonFileAuthorPaper.setEnabled(false);
        jButtonFilePaper.setEnabled(false);
        jButtonFilePaperPaper.setEnabled(false);
        jButtonFileGroundTruth.setEnabled(false);
        ExampleDatasetGui datasetExample = new ExampleDatasetGui(this, rootPaneCheckingEnabled);
        datasetExample.show();
    }//GEN-LAST:event_jRadioButtonDatasetExampleActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButtonMethodDataPreparationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMethodDataPreparationMouseClicked
        // TODO add your handling code here:
        jPopupMenuDataPreparation.show(jButtonMethodDataPreparation,1,
                (jButtonMethodDataPreparation.getHeight()));
    }//GEN-LAST:event_jButtonMethodDataPreparationMouseClicked

    private void jButtonStartImportDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartImportDataActionPerformed
        jTabbedPaneStep.setSelectedIndex(0);
        jTextAreaConsole.append("\nBegin import dataset....\n");
        long begin = System.currentTimeMillis();
        controller.guiHanderResquest(Options.IMPORT_DATA);
        jTextAreaConsole.append("End import dataset....\n");
        jTextAreaConsole.append("Time elapsed: " + String.valueOf((System.currentTimeMillis() - begin) / 1000) + "s" + "\n");
    }//GEN-LAST:event_jButtonStartImportDataActionPerformed

    private void jButtonErrorAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonErrorAnalysisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonErrorAnalysisActionPerformed

    private void jButtonMethodRecommendationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMethodRecommendationMouseClicked
        // TODO add your handling code here:
        jPopupMenuRecommendation.show(jButtonMethodRecommendation,1,
                (jButtonMethodRecommendation.getHeight()));
    }//GEN-LAST:event_jButtonMethodRecommendationMouseClicked

    private void jButtonMethodEvaluationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMethodEvaluationMouseClicked
        // TODO add your handling code here:
//        
        jPopupMenuEvaluation.show(jButtonMethodEvaluation,1,
                (jButtonMethodEvaluation.getHeight()));
    }//GEN-LAST:event_jButtonMethodEvaluationMouseClicked

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jButtonChooseDatasetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonChooseDatasetMouseClicked
        // TODO add your handling code here:
        jPopupMenuImportData.show(jButtonChooseDataset,1,
                (jButtonChooseDataset.getHeight()));
    }//GEN-LAST:event_jButtonChooseDatasetMouseClicked

    private void jButtonTFIDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTFIDFActionPerformed
        try {
            TFIDFGui tfidfGUI = new TFIDFGui(this, rootPaneCheckingEnabled);
            tfidfGUI.show();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(rootPane, "Warning", "Occured error...Please try again!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonTFIDFActionPerformed

    private void buildTFIDFFilesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildTFIDFFilesMenuItemActionPerformed
        try {
            TFIDFGui tfidfGUI = new TFIDFGui(this, rootPaneCheckingEnabled);
            tfidfGUI.show();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(rootPane, "Warning", "Occured error...Please try again!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_buildTFIDFFilesMenuItemActionPerformed

    private void jButtonFilePaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilePaperActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.showOpenDialog(this);
        controller.fileNamePapers = fc.getSelectedFile().getAbsolutePath();
        jTextAreaConsole.append(fc.getSelectedFile().getAbsolutePath() + "\n");
    }//GEN-LAST:event_jButtonFilePaperActionPerformed

    private void jButtonFileAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileAuthorActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.showOpenDialog(this);
        controller.fileNameAuthors = fc.getSelectedFile().getAbsolutePath();
        jTextAreaConsole.setText(fc.getSelectedFile().getAbsolutePath() + "\n");
    }//GEN-LAST:event_jButtonFileAuthorActionPerformed

    private void jButtonFileAuthorPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileAuthorPaperActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.showOpenDialog(this);
        controller.fileNameAuthorPaper = fc.getSelectedFile().getAbsolutePath();
        jTextAreaConsole.append(fc.getSelectedFile().getAbsolutePath() + "\n");
    }//GEN-LAST:event_jButtonFileAuthorPaperActionPerformed

    private void jButtonFilePaperPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilePaperPaperActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.showOpenDialog(this);
        controller.fileNamePaperCitePaper = fc.getSelectedFile().getAbsolutePath();
        jTextAreaConsole.append(fc.getSelectedFile().getAbsolutePath() + "\n");
    }//GEN-LAST:event_jButtonFilePaperPaperActionPerformed

    private void jButtonFileGroundTruthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileGroundTruthActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.showOpenDialog(this);
        controller.fileNameGroundTruth = fc.getSelectedFile().getAbsolutePath();
        jTextAreaConsole.append(fc.getSelectedFile().getAbsolutePath() + "\n");
    }//GEN-LAST:event_jButtonFileGroundTruthActionPerformed

    private void jComboBoxCMUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCMUserActionPerformed
        // TODO add your handling code here:
        if (jComboBoxCMUser.getSelectedIndex() == 0) {
            controller.combiningAuthor = 0;
        } else if (jComboBoxCMUser.getSelectedIndex() == 1) {
            controller.combiningAuthor = 1;
        } else if (jComboBoxCMUser.getSelectedIndex() == 2) {
            controller.combiningAuthor = 2;
        } else if (jComboBoxCMUser.getSelectedIndex() == 3) {
            controller.combiningAuthor = 3;
        }
    }//GEN-LAST:event_jComboBoxCMUserActionPerformed

    private void jComboBoxCMPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCMPaperActionPerformed
        // TODO add your handling code here:
        if (jComboBoxCMPaper.getSelectedIndex() == 0) {
            controller.combiningPaper = 0;
        } else if (jComboBoxCMPaper.getSelectedIndex() == 1) {
            controller.combiningPaper = 1;
        } else if (jComboBoxCMPaper.getSelectedIndex() == 2) {
            controller.combiningPaper = 2;
        } else if (jComboBoxCMPaper.getSelectedIndex() == 3) {
            controller.combiningPaper = 3;
        }
    }//GEN-LAST:event_jComboBoxCMPaperActionPerformed

    private void jComboBoxWeightingPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxWeightingPaperActionPerformed
        // TODO add your handling code here:
        if (jComboBoxWeightingPaper.getSelectedIndex() == 0) {
            controller.weightingPaper = 0;
        } else if (jComboBoxWeightingPaper.getSelectedIndex() == 1) {
            controller.weightingPaper = 1;
        } else if (jComboBoxWeightingPaper.getSelectedIndex() == 2) {
            controller.weightingPaper = 2;
        } else if (jComboBoxWeightingPaper.getSelectedIndex() == 3) {
            controller.weightingPaper = 3;
        }

    }//GEN-LAST:event_jComboBoxWeightingPaperActionPerformed

    private void jComboBoxMethodRecommendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMethodRecommendActionPerformed
        // TODO add your handling code here:
        if (jComboBoxMethodRecommend.getSelectedIndex() == 0) {
            controller.recommendationMethod = 1;
            jTextFieldShowMethodRec.setText(jComboBoxMethodRecommend.getSelectedItem().toString());
        } else if (jComboBoxMethodRecommend.getSelectedIndex() == 1) {
            controller.recommendationMethod = 2;
            controller.cfMethod = 1;
            jTextFieldShowMethodRec.setText(jComboBoxMethodRecommend.getSelectedItem().toString());
        } else if (jComboBoxMethodRecommend.getSelectedIndex() == 2) {
            controller.recommendationMethod = 2;
            controller.cfMethod = 2;
            jTextFieldShowMethodRec.setText(jComboBoxMethodRecommend.getSelectedItem().toString());
        } else if (jComboBoxMethodRecommend.getSelectedIndex() == 3) {
            controller.recommendationMethod = 2;
            controller.cfMethod = 3;
            jTextFieldShowMethodRec.setText(jComboBoxMethodRecommend.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBoxMethodRecommendActionPerformed

    private void jComboBoxMethodEvaluationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMethodEvaluationActionPerformed
        // TODO add your handling code here:
        if (jComboBoxMethodEvaluation.getSelectedIndex() == 0) {
            methodEvaluation = 0;
            jTextFieldEvaluationMethod.setText(jComboBoxMethodEvaluation.getSelectedItem().toString());
        } else if (jComboBoxMethodEvaluation.getSelectedIndex() == 1) {
            methodEvaluation = 1;
            jTextFieldEvaluationMethod.setText(jComboBoxMethodEvaluation.getSelectedItem().toString());
        } else if (jComboBoxMethodEvaluation.getSelectedIndex() == 2) {
            methodEvaluation = 2;
            jTextFieldEvaluationMethod.setText(jComboBoxMethodEvaluation.getSelectedItem().toString());
        } else if (jComboBoxMethodEvaluation.getSelectedIndex() == 3) {
            methodEvaluation = 3;
            jTextFieldEvaluationMethod.setText(jComboBoxMethodEvaluation.getSelectedItem().toString());
        } else if (jComboBoxMethodEvaluation.getSelectedIndex() == 4) {
            methodEvaluation = 4;
            jTextFieldEvaluationMethod.setText(jComboBoxMethodEvaluation.getSelectedItem().toString());
        } else if (jComboBoxMethodEvaluation.getSelectedIndex() == 5) {
            methodEvaluation = 5;
            jTextFieldEvaluationMethod.setText(jComboBoxMethodEvaluation.getSelectedItem().toString());
        } else if (jComboBoxMethodEvaluation.getSelectedIndex() == 6) {
            methodEvaluation = 6;
            jTextFieldEvaluationMethod.setText(jComboBoxMethodEvaluation.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBoxMethodEvaluationActionPerformed

    private void jButtonEvaluationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEvaluationActionPerformed
        // TODO add your handling code here:
        // viet them ham kiem tra xem co nguoi dung co nhap topRank cho cac
        // phuong phap EVALUATE khac tru f1 va mrr neu co thi thuc hien cac lenh if ben duoi
        jTabbedPaneStep.setSelectedIndex(3);
        if (!jTextFieldtopRank.getText().isEmpty()) {
            jTextAreaConsole.append("\nBegin evaluate....\n");
            long begin = System.currentTimeMillis();
            controller.topRank = Integer.parseInt(jTextFieldtopRank.getText().trim().toString());
            System.out.println("toprank:" + controller.topRank);
            response= controller.guiHanderResquest(Options.EVALUATE);
            previousEvaluation.add(response[1]);
            DefaultListModel model = new DefaultListModel();
            for (int i = 0; i < jListEvaluation.getModel().getSize(); i++) {
                model.addElement(jListEvaluation.getModel().getElementAt(i));
            }
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);

            model.addElement(calendar.get(Calendar.HOUR) + ":" + calendar.get(Calendar.MINUTE) + ":" + calendar.get(Calendar.SECOND) + " - " + jComboBoxMethodEvaluation.getSelectedItem());
            jListEvaluation.setModel(model);
            jTextAreaConsole.append("End evaluate....\n");
            jTextAreaConsole.append("Time elapsed: " + String.valueOf((System.currentTimeMillis() - begin) / 1000) + "s" + "\n");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please choose topRank to evaluate...", "Warning", JOptionPane.WARNING_MESSAGE);
            jTextFieldtopRank.requestFocus();
    }//GEN-LAST:event_jButtonEvaluationActionPerformed
    }
    private void visualizeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizeMenuItemActionPerformed
        try {
            VisualizeGui visualizeGui = new VisualizeGui(this, rootPaneCheckingEnabled);
            visualizeGui.show();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "Warning", "Occured error...Please try again!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_visualizeMenuItemActionPerformed

    private void jButtonDrawChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDrawChartActionPerformed
        try {
            VisualizeGui visualizeGui = new VisualizeGui(this, rootPaneCheckingEnabled);
            visualizeGui.show();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "Warning", "Occured error...Please try again!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDrawChartActionPerformed

    private void jComboBoxMethodPreDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMethodPreDataActionPerformed
        if (jComboBoxMethodPreData.getSelectedIndex() == 0) {
            jTextFieldDataPreAlgorithm.setText(jComboBoxMethodPreData.getSelectedItem().toString());
        } else if (jComboBoxMethodPreData.getSelectedIndex() == 1) {
            jTextFieldDataPreAlgorithm.setText(jComboBoxMethodPreData.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBoxMethodPreDataActionPerformed

    private void jButtonRecommendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecommendActionPerformed
        jTabbedPaneStep.setSelectedIndex(2);
        if (!jTextFieldTopNRecommend.getText().isEmpty()) {
            jTextAreaConsole.append("\nBegin recommend....\n");
            long begin = System.currentTimeMillis();
            controller.topNRecommend = Integer.parseInt(jTextFieldTopNRecommend.getText().trim().toString());
            controller.guiHanderResquest(Options.RECOMMEND);
            previousRecommdendation.add(controller.authors);
            DefaultListModel model = new DefaultListModel();
            for (int i = 0; i < jListRecAlgorithm.getModel().getSize(); i++) {
                model.addElement(jListRecAlgorithm.getModel().getElementAt(i));
            }
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);

            model.addElement(calendar.get(Calendar.HOUR) + ":" + calendar.get(Calendar.MINUTE) + ":" + calendar.get(Calendar.SECOND) + " - " + jComboBoxMethodRecommend.getSelectedItem());
            jListRecAlgorithm.setModel(model);
            jTextAreaConsole.append("End recommend....\n");
            jTextAreaConsole.append("Time elapsed: " + String.valueOf((System.currentTimeMillis() - begin) / 1000) + "s" + "\n");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please choose topNRecommend...", "Warning", JOptionPane.WARNING_MESSAGE);
            jTextFieldTopNRecommend.requestFocus();
        }
    }//GEN-LAST:event_jButtonRecommendActionPerformed

    private void jTextFieldTopNRecommendKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTopNRecommendKeyReleased
        if (!NumericUtility.isNum(jTextFieldTopNRecommend.getText().trim().toString()) && evt.getKeyChar() != KeyEvent.VK_BACK_SPACE && evt.getKeyChar() != KeyEvent.VK_ENTER) {
            JOptionPane.showMessageDialog(rootPane, "Please input number...", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int num = Integer.parseInt(jTextFieldTopNRecommend.getText().trim().toString());
            if ((num < 1 || num > 100) && evt.getKeyChar() != KeyEvent.VK_ENTER) {
                JOptionPane.showMessageDialog(rootPane, "Please input number >0 and <=101...", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jTextFieldTopNRecommendKeyReleased

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        try {
            controller = new CentralGuiHanderRequest();
            jTabbedPaneStep.setEnabledAt(0, true);
            jTabbedPaneStep.setSelectedIndex(0);
            jTextFieldDataPreAlgorithm.setText(jComboBoxMethodPreData.getSelectedItem().toString());
            jTextFieldShowMethodRec.setText(jComboBoxMethodRecommend.getSelectedItem().toString());
            jTextFieldEvaluationMethod.setText(jComboBoxMethodEvaluation.getSelectedItem().toString());
            jTextAreaConsole.setText("");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jListRecAlgorithmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListRecAlgorithmMouseClicked
        try {
            HashMap<String, Author> hm = (HashMap<String, Author>) previousRecommdendation.get(jListRecAlgorithm.getSelectedIndex());
            DefaultTableModel tablemodel = (DefaultTableModel) jTableRecommendationList.getModel();
            tablemodel.getDataVector().removeAllElements();
            jTableRecommendationList.setModel(tablemodel);
            int i = 0;
            for (String AuthorId : hm.keySet()) {
                i++;
                Vector vector = new Vector();
                vector.addElement(i);
                vector.addElement(hm.get(AuthorId).getAuthorId());
                vector.addElement(hm.get(AuthorId).getRecommendationList());
                tablemodel.addRow(vector);
            }
            jTableRecommendationList.setModel(tablemodel);

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jListRecAlgorithmMouseClicked

    private void jListEvaluationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListEvaluationMouseClicked
        try {
            jTextAreaReviewEvaluation.setText("");
            System.out.println(previousEvaluation.get(0).toString());
            jTextAreaReviewEvaluation.setText(previousEvaluation.get(jListEvaluation.getSelectedIndex()).toString());
            System.out.println();

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jListEvaluationMouseClicked

    private void jButtonContructUserProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContructUserProfileActionPerformed
        jTabbedPaneStep.setSelectedIndex(1);
        jTabbedPaneStep.setSelectedIndex(1);
        jTextAreaConsole.append("\nBegin construct author's profile....\n");
        long begin = System.currentTimeMillis();
        controller.guiHanderResquest(Options.CONSTRUCT_AUTHOR_PROFILE);
        jTextAreaConsole.append("End construct author's profile....\n");
        jTextAreaConsole.append("Time elapsed: " + String.valueOf(((System.currentTimeMillis() - begin)) / 1000) + "s" + "\n");
        jTextAreaConsole.append("Begin construct feature vector of papers....\n");
        begin = System.currentTimeMillis();
        controller.guiHanderResquest(Options.CONSTRUCT_PAPER_FV);
        jTextAreaConsole.append("End construct feature vector of papers....\n");
        jTextAreaConsole.append("Time elapsed: " + String.valueOf(System.currentTimeMillis() - begin) + "s");
    }//GEN-LAST:event_jButtonContructUserProfileActionPerformed

    private void jMenuItemExampleDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExampleDataActionPerformed
        jTabbedPaneStep.setEnabledAt(0, true);
        jTabbedPaneStep.setSelectedIndex(0);
        buttonGroup1.setSelected(jRadioButtonDatasetExample.getModel(), true);

        jButtonFileAuthor.setEnabled(false);
        jButtonFileAuthorCitePaper.setEnabled(false);
        jButtonFileAuthorPaper.setEnabled(false);
        jButtonFilePaper.setEnabled(false);
        jButtonFilePaperPaper.setEnabled(false);
        jButtonFileGroundTruth.setEnabled(false);

        if (jRadioButtonDatasetExample.isSelected()) {
            ExampleDatasetGui datasetExample = new ExampleDatasetGui(this, rootPaneCheckingEnabled);
            datasetExample.show();
        }
    }//GEN-LAST:event_jMenuItemExampleDataActionPerformed

    private void jMenuItemFromDataScourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFromDataScourceActionPerformed
        jTabbedPaneStep.setEnabledAt(0, true);
        jTabbedPaneStep.setSelectedIndex(0);
        buttonGroup1.setSelected(jRadioButtonDatasetSource.getModel(), true);
        if (jRadioButtonDatasetSource.isSelected()) {
            jButtonFileAuthor.setEnabled(true);
            jButtonFileAuthorCitePaper.setEnabled(true);
            jButtonFileAuthorPaper.setEnabled(true);
            jButtonFilePaper.setEnabled(true);
            jButtonFilePaperPaper.setEnabled(true);
            jButtonFileGroundTruth.setEnabled(true);
        }
    }//GEN-LAST:event_jMenuItemFromDataScourceActionPerformed

    private void jMenuItemDcontentbasedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDcontentbasedActionPerformed
        jTabbedPaneStep.setEnabledAt(1, true);
        jTabbedPaneStep.setSelectedIndex(1);
        jComboBoxMethodPreData.setSelectedIndex(0);
        jTextFieldDataPreAlgorithm.setText(jComboBoxMethodPreData.getSelectedItem().toString());
        jTabbedPaneDataPreparation.setEnabledAt(0, true);
        jTabbedPaneDataPreparation.setSelectedIndex(0);
        jTabbedPaneDataPreparation.setEnabledAt(1, false);
    }//GEN-LAST:event_jMenuItemDcontentbasedActionPerformed

    private void jTextFieldIdAuthorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIdAuthorKeyReleased
        if (!NumericUtility.isNum(jTextFieldIdAuthor.getText().trim().toString()) && evt.getKeyChar() != KeyEvent.VK_BACK_SPACE && evt.getKeyChar() != KeyEvent.VK_ENTER) {
            JOptionPane.showMessageDialog(rootPane, "Please input number...", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jTextFieldIdAuthorKeyReleased

    private void jButtonFindUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFindUserActionPerformed
        if (!jTextFieldIdAuthor.getText().isEmpty()) {
            int IdAuthor = Integer.parseInt(jTextFieldIdAuthor.getText());
            try {
                HashMap<String, Author> hm = (HashMap<String, Author>) previousRecommdendation.get(jListRecAlgorithm.getSelectedIndex());
                DefaultTableModel tablemodel = (DefaultTableModel) jTableRecommendationList.getModel();
                tablemodel.getDataVector().removeAllElements();
                jTableRecommendationList.setModel(tablemodel);
                int i = 0;
                for (String AuthorId : hm.keySet()) {
                    if (IdAuthor == Integer.parseInt(AuthorId)) {
                        i++;
                        Vector vector = new Vector();
                        vector.addElement(i);
                        vector.addElement(hm.get(AuthorId).getAuthorId());
                        vector.addElement(hm.get(AuthorId).getRecommendationList());
                        tablemodel.addRow(vector);
                    }
                }
                jTableRecommendationList.setModel(tablemodel);
                if (i == 0) {
                    JOptionPane.showMessageDialog(rootPane, "No Id Author which you found...", "Notice", JOptionPane.WARNING_MESSAGE);
                }
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please input Id Author...", "Warning", JOptionPane.WARNING_MESSAGE);
            jTextFieldIdAuthor.requestFocus();
        }
    }//GEN-LAST:event_jButtonFindUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            System.out.println("Unable to load Windows look and feel");
        }
        //</editor-fold>
         
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PRSGui().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem buildTFIDFFilesMenuItem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButtonChooseDataset;
    private javax.swing.JButton jButtonContructUserProfile;
    private javax.swing.JButton jButtonDrawChart;
    private javax.swing.JButton jButtonErrorAnalysis;
    private javax.swing.JButton jButtonEvaluation;
    private javax.swing.JButton jButtonFileAuthor;
    private javax.swing.JButton jButtonFileAuthorCitePaper;
    private javax.swing.JButton jButtonFileAuthorPaper;
    private javax.swing.JButton jButtonFileGroundTruth;
    private javax.swing.JButton jButtonFilePaper;
    private javax.swing.JButton jButtonFilePaperPaper;
    private javax.swing.JButton jButtonFindUser;
    private javax.swing.JButton jButtonMethodDataPreparation;
    private javax.swing.JButton jButtonMethodEvaluation;
    private javax.swing.JButton jButtonMethodRecommendation;
    private javax.swing.JButton jButtonRecommend;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSaveModel;
    private javax.swing.JButton jButtonStartImportData;
    private javax.swing.JButton jButtonStopEvaluation;
    private javax.swing.JButton jButtonStopImportData;
    private javax.swing.JButton jButtonStopRecommendation;
    private javax.swing.JButton jButtonTFIDF;
    private javax.swing.JComboBox jComboBoxCMPaper;
    private javax.swing.JComboBox jComboBoxCMUser;
    private javax.swing.JComboBox jComboBoxMethodEvaluation;
    private javax.swing.JComboBox jComboBoxMethodPreData;
    private javax.swing.JComboBox jComboBoxMethodRecommend;
    private javax.swing.JComboBox jComboBoxWeightingPaper;
    private javax.swing.JComboBox jComboBoxWeightingUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jListEvaluation;
    private javax.swing.JList jListRecAlgorithm;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItemAllEvalution;
    private javax.swing.JMenuItem jMenuItemDcollaborativeFiltering;
    private javax.swing.JMenuItem jMenuItemDcontentbased;
    private javax.swing.JMenuItem jMenuItemExampleData;
    private javax.swing.JMenuItem jMenuItemF1;
    private javax.swing.JMenuItem jMenuItemFromDataScource;
    private javax.swing.JMenuItem jMenuItemMAP;
    private javax.swing.JMenuItem jMenuItemMRR;
    private javax.swing.JMenuItem jMenuItemNDCG;
    private javax.swing.JMenuItem jMenuItemPrecision;
    private javax.swing.JMenuItem jMenuItemRCollaborativeFiltering;
    private javax.swing.JMenuItem jMenuItemRcontentBased;
    private javax.swing.JMenuItem jMenuItemRecall;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenuDataPreparation;
    private javax.swing.JPopupMenu jPopupMenuEvaluation;
    private javax.swing.JPopupMenu jPopupMenuImportData;
    private javax.swing.JPopupMenu jPopupMenuRecommendation;
    private javax.swing.JRadioButton jRadioButtonDatasetExample;
    private javax.swing.JRadioButton jRadioButtonDatasetSource;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPaneDataPreparation;
    private javax.swing.JTabbedPane jTabbedPaneStep;
    private javax.swing.JTable jTableRecommendationList;
    private javax.swing.JTextArea jTextAreaAuthor;
    private javax.swing.JTextArea jTextAreaAuthorCitePaper;
    private javax.swing.JTextArea jTextAreaAuthorPaper;
    private javax.swing.JTextArea jTextAreaConsole;
    private javax.swing.JTextArea jTextAreaGroundTruth;
    private javax.swing.JTextArea jTextAreaPaper;
    private javax.swing.JTextArea jTextAreaPaperPaper;
    private javax.swing.JTextArea jTextAreaReviewEvaluation;
    private javax.swing.JTextField jTextFieldDataPreAlgorithm;
    private javax.swing.JTextField jTextFieldEvaluationMethod;
    private javax.swing.JTextField jTextFieldIdAuthor;
    private javax.swing.JTextField jTextFieldShowMethodRec;
    private javax.swing.JTextField jTextFieldTopNRecommend;
    private javax.swing.JTextField jTextFieldtopRank;
    private javax.swing.JMenuItem loadExistentModelMenuItem;
    private javax.swing.JMenuItem resetMenuItem;
    private javax.swing.JMenuItem saveModelMenuItem;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JMenuItem visualizeMenuItem;
    // End of variables declaration//GEN-END:variables
}
