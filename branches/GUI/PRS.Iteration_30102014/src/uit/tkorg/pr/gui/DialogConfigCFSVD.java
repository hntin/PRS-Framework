/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uit.tkorg.pr.gui;

import java.awt.event.KeyEvent;
import javax.swing.UIManager;
import uit.tkorg.utility.general.NumericUtility;

/**
 *
 * @author Zoe
 */
public class DialogConfigCFSVD extends javax.swing.JDialog {

    /**
     * Creates new form configurationCFCosineGui
     */
    int kNeighbourhood = 8;
    int f = 5;
    double l = 0.001;
    int i = 100;

    public DialogConfigCFSVD(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel23 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        CMAuthorTextPane = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        kNeighbourhood_TextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        f_TextField = new javax.swing.JTextField();
        l_TextField = new javax.swing.JTextField();
        i_TextField = new javax.swing.JTextField();
        ok_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Configuration for CF using SVD agorithm");

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Description Algorithm"));

        CMAuthorTextPane.setEditable(false);
        CMAuthorTextPane.setText("In here, we use algorithm and execute by SVD ALSWRFactorize of Apache Mahout  (https://mahout.apache.org/users/dim-reduction/dimensional-reduction.html).\nWe have to input K NEIGHBOR, F, L, I parameters to use this algorithm. In that, F is number of features, normalize by L, I is iterations.\nIf you don't input nothing, default parameters are K NEIGHBOR =8, F=5, L= 0.001, I=100.");
        jScrollPane6.setViewportView(CMAuthorTextPane);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));

        jLabel1.setText("k_Neighbor:");

        kNeighbourhood_TextField.setText("8");
        kNeighbourhood_TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kNeighbourhood_TextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                kNeighbourhood_TextFieldKeyTyped(evt);
            }
        });

        jLabel2.setText("f:");

        jLabel3.setText("l:");

        jLabel4.setText("i:");

        f_TextField.setText("5");
        f_TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                f_TextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_TextFieldKeyTyped(evt);
            }
        });

        l_TextField.setText("0.001");
        l_TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                l_TextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                l_TextFieldKeyTyped(evt);
            }
        });

        i_TextField.setText("100");
        i_TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                i_TextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i_TextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kNeighbourhood_TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                    .addComponent(f_TextField)
                    .addComponent(l_TextField)
                    .addComponent(i_TextField)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kNeighbourhood_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(f_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(l_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(i_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ok_Button.setText("OK");
        ok_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ok_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ok_Button)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ok_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ok_ButtonActionPerformed
        kNeighbourhood = Integer.parseInt(kNeighbourhood_TextField.getText());
        f = Integer.parseInt(f_TextField.getText());
        l = Double.parseDouble(l_TextField.getText());
        i = Integer.parseInt(i_TextField.getText());
        this.hide();
    }//GEN-LAST:event_ok_ButtonActionPerformed

    private void kNeighbourhood_TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kNeighbourhood_TextFieldKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE
                && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            evt.consume();
        }
    }//GEN-LAST:event_kNeighbourhood_TextFieldKeyTyped

    private void f_TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_TextFieldKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE
                && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            evt.consume();
        }
    }//GEN-LAST:event_f_TextFieldKeyTyped

    private void i_TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i_TextFieldKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE
                && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            evt.consume();
        }
    }//GEN-LAST:event_i_TextFieldKeyTyped

    private void l_TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_l_TextFieldKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE
                && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            evt.consume();
        }
    }//GEN-LAST:event_l_TextFieldKeyTyped

    private void kNeighbourhood_TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kNeighbourhood_TextFieldKeyReleased
        if(!NumericUtility.isNum(kNeighbourhood_TextField.getText())){
            if(!"".equals(kNeighbourhood_TextField.getText())){
                kNeighbourhood_TextField.setText("8");
            }
        }
        else if(NumericUtility.isNum(kNeighbourhood_TextField.getText())){
            double tmp=Double.parseDouble(kNeighbourhood_TextField.getText());
            if(tmp<0){
                kNeighbourhood_TextField.setText("8");
            }
        }
    }//GEN-LAST:event_kNeighbourhood_TextFieldKeyReleased

    private void f_TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_TextFieldKeyReleased
        if(!NumericUtility.isNum(f_TextField.getText())){
            if(!"".equals(f_TextField.getText())){
                f_TextField.setText("5");
            }
        }
        else if(NumericUtility.isNum(f_TextField.getText())){
            double tmp=Double.parseDouble(f_TextField.getText());
            if(tmp<0){
                f_TextField.setText("5");
            }
        }
    }//GEN-LAST:event_f_TextFieldKeyReleased

    private void l_TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_l_TextFieldKeyReleased
        if(!NumericUtility.isNum(l_TextField.getText())){
            if(!"".equals(l_TextField.getText())){
                l_TextField.setText("0.0");
            }
        }
        else if(NumericUtility.isNum(l_TextField.getText())){
            double tmp=Double.parseDouble(l_TextField.getText());
            if(tmp<0||tmp>1){
                l_TextField.setText("0.0");
            }
        }
    }//GEN-LAST:event_l_TextFieldKeyReleased

    private void i_TextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i_TextFieldKeyReleased
        if(!NumericUtility.isNum(i_TextField.getText())){
            if(!"".equals(l_TextField.getText())){
                i_TextField.setText("100");
            }
        }
        else if(NumericUtility.isNum(i_TextField.getText())){
            double tmp=Double.parseDouble(i_TextField.getText());
            if(tmp<0){
                i_TextField.setText("100");
            }
        }
    }//GEN-LAST:event_i_TextFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            System.out.println("Unable to load Windows look and feel");
        }
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogConfigCFSVD dialog = new DialogConfigCFSVD(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane CMAuthorTextPane;
    private javax.swing.JTextField f_TextField;
    private javax.swing.JTextField i_TextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField kNeighbourhood_TextField;
    private javax.swing.JTextField l_TextField;
    private javax.swing.JButton ok_Button;
    // End of variables declaration//GEN-END:variables
}
