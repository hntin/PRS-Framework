/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package uit.tkorg.pr.gui;

import javax.swing.UIManager;

/**
 *
 * @author Zoe
 */
public class DialogDescriptionCB extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    public DialogDescriptionCB(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel23 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        CMAuthorTextPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Description Configuration Content - Based Algorithm");
        setResizable(false);

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Description Option"));

        CMAuthorTextPane.setEditable(false);
        CMAuthorTextPane.setText("You have to set up parameters for constructing authors's profile and constructing feature vector for papers.This seems to prepare data for reccommendation.\n- Constructing authors's profile contains parameters:\n  Combination Method. This parameter constructs feature vector for papers of authors.\n  + Feature Vector Of Paper: Use only feature vector of paper.\n  + Feature Vector Of Paper + Citation Papers : Use feature vector of paper and it's citation papers.\n  + Feature Vector Of Paper + Reference Papers : Use feature vector of paper and it's reference papers.\n  + Feature Vector Of Paper + Citation+ Reference Paper: Use feature vector of papers and both it's citation papers and it's reference papers.\n Weighting Combination: This parameter constructs feature vectors for papers of authors.\n  + Linear combination (LC) : Weighting to combine 2 papers equal 1.\n  + Cosine similarity(SIM): Weighting to combine 2 papers equal cosine similarity of them.\n  + Reciprocal of the difference between published years(RPY): Weighting to combine 2 papers equal reciprocal of distance between published years.\n- Feature vector constuction for papers contains parameters:\n  Combination Method : This parameter constructs feature vector for candidate papers to recommend for authors.\n  + Feature Vector Of Paper: Use only feature vector of paper.\n  + Feature Vector Of Paper + Citation Papers : Use feature vector of paper and it's citation papers.\n  + Feature Vector Of Paper + Reference Papers : Use feature vector of paper and it's reference papers.\n  + Feature Vector Of Paper + Citation+ Reference Paper: Use feature vector of papers and both it's citation papers and it's reference papers.\n  Weighting Combination: This parameter constructs feature vectors for candidate papers.\n  + Linear combination (LC) : Weighting to combine 2 papers equal 1.\n  + Cosine similarity(SIM): Weighting to combine 2 papers equal cosine similarity of them.\n  + Reciprocal of the difference between published years(RPY): Weighting to combine 2 papers equal reciprocal of distance between published years.\n- Pruning: a paper only combine with another paper when cosine similarity between them bigger or equal pruning.");
        jScrollPane6.setViewportView(CMAuthorTextPane);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            System.out.println("Unable to load Windows look and feel");
        }
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogDescriptionCB dialog = new DialogDescriptionCB(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane CMAuthorTextPane;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JScrollPane jScrollPane6;
    // End of variables declaration//GEN-END:variables
}
